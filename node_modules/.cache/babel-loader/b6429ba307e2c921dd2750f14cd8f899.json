{"ast":null,"code":"var _jsxFileName = \"/Users/berkgaffaroglu/Documents/MemoryChallange/memorychallange/src/components/FetchTop10Players.js\";\nimport React, { Component } from 'react';\nexport class FetchTop10Players extends Component {\n  constructor(props) {\n    super(props); // initializing the variables that I am going to use later.\n\n    this.state = {\n      projectList: [],\n      Render: false,\n      errors: false\n    };\n  } // Fetching top 10 players from REST Api response\n\n\n  async fetchAll() {\n    try {\n      let response = await fetch(this.props.websiteUrl + 'api/top10-players/');\n      let data = await response.json();\n      this.setState({\n        projectList: data,\n        // Rendering only if the response is okay.\n        Render: true\n      });\n    } catch (err) {\n      this.setState({\n        errors: true\n      });\n    }\n  }\n\n  componentWillMount() {\n    // Fetching the data before render \n    this.fetchAll();\n  }\n\n  render() {\n    // Rendering the data if this.state.Render is true as we set.\n    if (this.state.Render) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, this.state.projectList.map(function (player, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, player.id, \" \", player.country, \" \", player.nickname, \" \", player.score);\n      }));\n    } // If the data is taken too much time to load display a spinning animation\n    else if (this.state.Render == false) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, \"Wait\");\n      } else if (this.state.errors) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, \"Something is wrong. Please try again.\");\n      }\n  }\n\n}\nexport default FetchTop10Players;","map":{"version":3,"sources":["/Users/berkgaffaroglu/Documents/MemoryChallange/memorychallange/src/components/FetchTop10Players.js"],"names":["React","Component","FetchTop10Players","constructor","props","state","projectList","Render","errors","fetchAll","response","fetch","websiteUrl","data","json","setState","err","componentWillMount","render","map","player","index","id","country","nickname","score"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH,GAT4C,CAU7C;;;AACA,QAAMC,QAAN,GAAiB;AACb,QAAI;AAEA,UAAIC,QAAQ,GAAG,MAAOC,KAAK,CAAC,KAAKP,KAAL,CAAWQ,UAAX,GAAwB,oBAAzB,CAA3B;AACA,UAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,WAAKC,QAAL,CAAc;AACVT,QAAAA,WAAW,EAAEO,IADH;AAEV;AACAN,QAAAA,MAAM,EAAE;AAHE,OAAd;AAMH,KAVD,CAUE,OAAOS,GAAP,EAAY;AACV,WAAKD,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAC;AADG,OAAd;AAGH;AAEJ;;AACDS,EAAAA,kBAAkB,GAAG;AACjB;AACA,SAAKR,QAAL;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL;AACA,QAAI,KAAKb,KAAL,CAAWE,MAAf,EAAuB;AAEnB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWC,WAAX,CAAuBa,GAAvB,CAA2B,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACjD,4BACA;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBD,MAAM,CAACE,EAAzB,OAA8BF,MAAM,CAACG,OAArC,OAA+CH,MAAM,CAACI,QAAtD,OAAiEJ,MAAM,CAACK,KAAxE,CADA;AAGH,OAJA,CADL,CADJ;AAUH,KAZD,CAaA;AAbA,SAcK,IAAI,KAAKpB,KAAL,CAAWE,MAAX,IAAqB,KAAzB,EAA+B;AAChC,4BACI,iDADJ;AAGH,OAJI,MAKA,IAAI,KAAKF,KAAL,CAAWG,MAAf,EAAuB;AACxB,4BACI,kFADJ;AAGH;AAIJ;;AA9D4C;AAiEjD,eAAeN,iBAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class FetchTop10Players extends Component {\n    constructor(props) {\n        super(props)\n        // initializing the variables that I am going to use later.\n        this.state = {\n            projectList: [],\n            Render: false,\n            errors: false\n        }\n    }\n    // Fetching top 10 players from REST Api response\n    async fetchAll() {\n        try {\n\n            let response = await (fetch(this.props.websiteUrl + 'api/top10-players/'));\n            let data = await response.json();\n            this.setState({\n                projectList: data,\n                // Rendering only if the response is okay.\n                Render: true\n            })\n\n        } catch (err) {\n            this.setState({\n                errors:true\n            })\n        }\n\n    }\n    componentWillMount() {\n        // Fetching the data before render \n        this.fetchAll()\n    }\n    render() {\n        // Rendering the data if this.state.Render is true as we set.\n        if (this.state.Render) {\n\n            return (\n                <div>\n                    {this.state.projectList.map(function (player, index) {\n                        return(\n                        <div key={index}>{player.id} {player.country} {player.nickname} {player.score}</div>    \n                        )\n                    })}\n                </div>\n            )\n\n        } \n        // If the data is taken too much time to load display a spinning animation\n        else if (this.state.Render == false){\n            return (\n                <>Wait</>\n            )\n        }\n        else if (this.state.errors) {\n            return (\n                <>Something is wrong. Please try again.</>\n            )\n        }\n \n\n\n    }\n}\n\nexport default FetchTop10Players\n"]},"metadata":{},"sourceType":"module"}