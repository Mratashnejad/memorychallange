{"ast":null,"code":"var _jsxFileName = \"/Users/berkgaffaroglu/Documents/MemoryChallange/memorychallange/src/components/FetchRandomWords.js\";\nimport React, { Component } from 'react';\nexport class FetchRandomWords extends Component {\n  constructor(props) {\n    super(props); // initializing the variables that I am going to use later.\n\n    this.state = {\n      projectList: [],\n      Render: false,\n      errors: false,\n      level: 0\n    };\n  }\n\n  async fetchRandomWords(level) {\n    try {\n      var totalWords = level * 4;\n      var wrongWords = totalWords / 4;\n      let response = await fetch(this.props.websiteUrl + `api/get-random-words/total=${totalWords}/wrong=${wrongWords}`);\n      let data = await response.json();\n      this.setState({\n        projectList: data,\n        // Rendering if the response that is coming from the API is okay.\n        Render: true\n      }); // If there is any error handle it by changing the state Render:false and errors:true\n    } catch (err) {\n      this.setState({\n        errors: true,\n        Render: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\nexport default FetchRandomWords;","map":{"version":3,"sources":["/Users/berkgaffaroglu/Documents/MemoryChallange/memorychallange/src/components/FetchRandomWords.js"],"names":["React","Component","FetchRandomWords","constructor","props","state","projectList","Render","errors","level","fetchRandomWords","totalWords","wrongWords","response","fetch","websiteUrl","data","json","setState","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AAC5CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,MAAM,EAAE,KAHC;AAITC,MAAAA,KAAK,EAAC;AAJG,KAAb;AAMH;;AACD,QAAMC,gBAAN,CAAuBD,KAAvB,EAA8B;AAC1B,QAAI;AACA,UAAIE,UAAU,GAAGF,KAAK,GAAC,CAAvB;AACA,UAAIG,UAAU,GAAGD,UAAU,GAAC,CAA5B;AACA,UAAIE,QAAQ,GAAG,MAAOC,KAAK,CAAC,KAAKV,KAAL,CAAWW,UAAX,GAAyB,8BAA6BJ,UAAW,UAASC,UAAW,EAAtF,CAA3B;AACA,UAAII,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACA,WAAKC,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAEU,IADH;AAEV;AACAT,QAAAA,MAAM,EAAE;AAHE,OAAd,EALA,CAWJ;AACC,KAZD,CAYE,OAAOY,GAAP,EAAY;AACV,WAAKD,QAAL,CAAc;AAEVV,QAAAA,MAAM,EAAC,IAFG;AAGVD,QAAAA,MAAM,EAAE;AAHE,OAAd;AAKH;AAEJ;;AACDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAvC2C;AA0ChD,eAAelB,gBAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class FetchRandomWords extends Component {\n    constructor(props) {\n        super(props)\n        // initializing the variables that I am going to use later.\n        this.state = {\n            projectList: [],\n            Render: false,\n            errors: false,\n            level:0\n        }\n    }\n    async fetchRandomWords(level) {\n        try {\n            var totalWords = level*4\n            var wrongWords = totalWords/4\n            let response = await (fetch(this.props.websiteUrl + `api/get-random-words/total=${totalWords}/wrong=${wrongWords}`));\n            let data = await response.json();\n            this.setState({\n                projectList: data,\n                // Rendering if the response that is coming from the API is okay.\n                Render: true\n            })\n\n        // If there is any error handle it by changing the state Render:false and errors:true\n        } catch (err) {\n            this.setState({\n\n                errors:true,\n                Render: false\n            })\n        }\n\n    }\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default FetchRandomWords\n"]},"metadata":{},"sourceType":"module"}